receivers:
  otlp:
    protocols:
      grpc:
      http:

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_mib: 1000
    spike_limit_mib: 200
  resource:
    attributes:
      - key: service.name
        value: "claude-docling-api"
        action: upsert

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: "claude_docling"
    send_timestamps: true
    metric_expiration: 180m
    resource_to_telemetry_conversion: true
  logging:
    loglevel: debug
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  # In a production environment, you would configure additional exporters
  # such as a proper metrics backend and tracing system

service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]  # Replace with otlp/jaeger in production
    metrics:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [prometheus, logging]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resource]
      exporters: [logging]
